params: # This file is a first draft and will need to be adjusted
  seed: ${...seed}
  algo:
    name: ppo_continuous  # Assuming PPO is suitable for EdgeFollow

  model:
    name: continuous_ppo_logstd

  network:
    name: actor_critic
    separate: False

    space:
      continuous:
        mu_activation: None
        sigma_activation: None
        mu_init:
          name: default
        sigma_init:
          name: const_initializer
          val: 0
        fixed_sigma: True
    mlp:
      units: [256, 256, 128]  # Adjusted based on expected complexity
      activation: elu
      d2rl: False

      initializer:
        name: default
      regularizer:
        name: None

  load_checkpoint: ${if:${...checkpoint},True,False}
  load_path: ${...checkpoint}

  config:
    name: ${resolve_default:EdgeFollow,${....experiment}}
    full_experiment_name: ${.name}
    env_name: rlgpu  # Assuming use of a GPU-based environment
    multi_gpu: ${....multi_gpu}
    ppo: True
    mixed_precision: False
    normalize_input: True
    normalize_value: True
    num_actors: 8  # Set based on the expected parallelism
    reward_shaper:
      scale_value: 0.01  # Adjust as per EdgeFollow requirements
    normalize_advantage: True
    gamma: 0.99
    tau: 0.95
    learning_rate: 3e-4  # Adjust based on experimentation
    lr_schedule: adaptive
    kl_threshold: 0.01  # Adjust based on experimentation
    score_to_win: 1000  # Set an appropriate winning score
    max_epochs: 2000  # Adjust based on the complexity of EdgeFollow
    save_best_after: 100
    save_frequency: 50
    print_stats: True
    grad_norm: 0.5  # Adjust if needed
    entropy_coef: 0.01  # Adjust for exploration/exploitation balance
    truncate_grads: True
    e_clip: 0.2
    horizon_length: 32  # Adjust based on task duration
    minibatch_size: 4096  # Adjust based on computational resources
    mini_epochs: 4
    critic_coef: 1  # Adjust based on the importance of value estimation
    clip_value: True
    seq_len: 8  # Adjust based on the temporal dependencies in the task
    bounds_loss_coef: 0.001  # Adjust if needed
